How did viewing a diff between two versions of a file help you see the bug that was introduced?

By displaying only the lines that differ, it is easier to spot the changes, whether intentional or not.
———————————
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Restore file to previous point in time.
———————————
As a programmer, when would you want to have a version of your code saved?

Whenever more than 10 lines of code have been changed and whenever I choose to save a version.
———————————
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pros: You commit only when there is a logical break. For automatic versioning, the changes saved may not be meaningful and may not even compile.
Cons: Must remember to commit the changes when appropriate.
———————————
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git allows treatment of related changes in multiple files as one logical unit of work.
Others treat the changes as unrelated, perhaps for simplicity.
———————————
How can you use the commands git log and git diff to view the history of files?

Use git log to browse the description of the changes and git diff to list the changes between 2 commits.
———————————
How might using version control make you more confident to make changes that could break something?

You could use it to find out where it first broke and revert to the version prior to the problem, if required.
———————————
Now that you have your workspace set up, what do you want to try using Git for?

IT Masters Demo project
———————————
