What happens when you initialize a repository? Why do you need to do it?

.git file is created. Nothing is committed. Required by Git.
———————————
How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area contains files that will be committed to the repository with ‘git commit’. It allows you to include only files that are part of the changes.
———————————
How can you use the staging area to make sure you have one commit per logical change?

use git diff —-staged to check the changes before running git commit.
———————————
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to experiment with something uncertain or create another version for testing new features.
———————————
How do the diagrams help you visualize the branch structure?

By linking the commits to the branch in a tree structure.
———————————
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The changes in both branches are merged.
———————————
What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Automatic merging Pros: faster & less error prone. Cons: not always available.
Manual commits: slower & more effort involved.
———————————
